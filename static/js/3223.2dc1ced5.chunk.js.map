{"version":3,"file":"static/js/3223.2dc1ced5.chunk.js","mappings":"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","sources":["components/Timer.jsx","components/Waifunomics.jsx","pages/Home.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport './Timer.scss'\r\n\r\nexport default function Timer({timeToEnd}) {\r\n  const [days, setDays] = useState(0)\r\n  const [hours, setHours] = useState(0)\r\n  const [minutes, setMinutes] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const getTimeUntil = () => {\r\n      const deadline = timeToEnd ? parseInt(timeToEnd) * 1000 : 0\r\n      const time = deadline - Date.now()\r\n      if (time < 0) {\r\n        setDays(0)\r\n        setHours(0)\r\n        setMinutes(0)\r\n      } else {\r\n        const seconds = Math.floor((time / 1000) % 60)\r\n        const minutes = Math.floor((time / 1000 / 60) % 60)\r\n        const hours = Math.floor((time / (1000 * 60 * 60)) % 24)\r\n        const days = Math.floor(time / (1000 * 60 * 60 * 24))\r\n        setDays(days)\r\n        setHours(hours)\r\n        setMinutes(minutes)\r\n      }\r\n    }\r\n    const timer = setInterval(getTimeUntil, 1000)\r\n\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  }, [timeToEnd])\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <div>\r\n        <span className=\"number-container end\">{days < 10 ? 0 : Math.floor(days / 10)}</span>\r\n        <span className=\"number-container mid\">{days % 10}</span>\r\n        <div className='unit text-center'>days</div>\r\n      </div>\r\n      <div>\r\n        <span className=\"number-container center\">{hours < 10 ? 0 : Math.floor(hours / 10)}</span>\r\n        <span className=\"number-container center\">{hours % 10}</span>\r\n        <div className='unit text-center'>hours</div>\r\n      </div>\r\n      <div>\r\n        <span className=\"number-container mid\">{minutes < 10 ? 0 : Math.floor(minutes / 10)}</span>\r\n        <span className=\"number-container end\">{minutes % 10}</span>\r\n        <div className='unit text-center'>minutes</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import './Waifnomics.scss'\r\nimport { Container, Image } from 'react-bootstrap'\r\nimport WaifunomicsCoinImg from \"assets/images/waifunomicscoin.png\"\r\nimport TeacherImg from 'assets/images/Teacher.png'\r\nimport CoinsBottomImg from 'assets/images/CoinsBottom.png'\r\nimport { useState } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport 'chart.js/auto'\r\nimport Deco1Img from \"assets/images/deco1.png\"\r\nimport ChartMarketingImg from \"assets/images/ChartMarketing.png\"\r\nimport ChartTeamImg from \"assets/images/ChartTeam.png\"\r\nimport ChartPresaleImg from \"assets/images/ChartPresale.png\"\r\nimport ChartStakingImg from \"assets/images/ChartStaking.png\"\r\nimport ChartLpImg from \"assets/images/ChartLp.png\"\r\nimport Line1 from \"assets/images/line1.png\"\r\nimport Line2 from \"assets/images/line2.png\"\r\nimport Line3 from \"assets/images/line3.png\"\r\nimport WhalesImg from \"assets/images/whale.png\"\r\nimport { useMediaQuery } from '@uidotdev/usehooks'\r\n\r\nconst TokenInfoTable = () => {\r\n  const tokenInfo = [{ h: 'name', d: 'gotcha' }, { h: 'ticker', d: '$gotcha' }, { h: 'token chain', d: 'sonic' }, { h: 'total supply', d: '1 billion' }, { h: 'team', d: 'gotcha, sonic' }]\r\n  return (\r\n    <table className=\"token-info-table\">\r\n      <tbody>\r\n        {\r\n          tokenInfo.map(info => (\r\n            <tr key={info.h}>\r\n              <th>{info.h}</th>\r\n              <td>{info.d}</td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nconst SupplyDistributtion = () => {\r\n  const isMobile = useMediaQuery(\"only screen and (max-width: 480px)\");\r\n  const data = [\r\n    { title: 'Presale', value: 30, color: '#f30076' },\r\n    { title: 'LP', value: 30, color: '#ff2f92' },\r\n    { title: 'NFT staking', value: 10, color: '#ff6db3' },\r\n    { title: 'Marketing', value: 15, color: '#ffa3cf' },\r\n    { title: 'Team', value: 15, color: '#ffd1e7' },\r\n  ]\r\n\r\n  const TeamComp = () => {\r\n    return (\r\n      <div className=\"chart-comp-container team\">\r\n        <div className=\"team-comp\">\r\n          <p className=\"locked\">Locked for a period of 3 months</p>\r\n          <Image src={Deco1Img} id=\"deco\" />\r\n          <div className=\"info\">\r\n            <p>team</p>\r\n            <p>15%</p>\r\n          </div>\r\n          <Image src={ChartTeamImg} className=\"line\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const PresaleComp = () => {\r\n    return (\r\n      <div className=\"chart-comp-container presale\">\r\n        <div className=\"presale-comps\">\r\n          <Image src={ChartPresaleImg} className=\"line\" />\r\n          <div className=\"info\">\r\n            <p>presale</p>\r\n            <p>30%</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const LPComp = () => {\r\n    return (\r\n      <div className=\"chart-comp-container lp\">\r\n        <div className=\"lp-comps\">\r\n          <Image src={ChartLpImg} className=\"line\" />\r\n          <div className=\"info\">\r\n            <p>LP</p>\r\n            <p>30%</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const StakingComp = () => {\r\n    return (\r\n      <div className=\"chart-comp-container staking\">\r\n        <div className=\"staking-comp\">\r\n          <div className=\"info\">\r\n            <p>nft staking</p>\r\n            <p>10%</p>\r\n          </div>\r\n          <Image src={ChartStakingImg} className=\"line\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const MarketingComp = () => {\r\n    return (\r\n      <div className=\"chart-comp-container marketing\">\r\n        <div className=\"marketing-comp\">\r\n          <div className=\"info\">\r\n            <p>marketing</p>\r\n            <p>15%</p>\r\n          </div>\r\n          <Image src={ChartMarketingImg} className=\"line\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='supply-distribution'>\r\n      <h3>$gotcha supply distribution</h3>\r\n      <div className='chart-container'>\r\n        {\r\n          isMobile ? null :\r\n            <>\r\n              <TeamComp />\r\n              <PresaleComp />\r\n              <LPComp />\r\n              <StakingComp />\r\n              <MarketingComp />\r\n            </>\r\n        }\r\n        <Doughnut\r\n          data={{\r\n            datasets: [{\r\n              data: data.map(d => d.value),\r\n              backgroundColor: data.map(d => d.color)\r\n            }],\r\n            labels: isMobile ? data.map(d => `${d.title} ${d.value}%`) : null,\r\n          }}\r\n          options={{\r\n            elements: {\r\n              arc: {\r\n                borderColor: '#000',\r\n                borderWidth: 4\r\n              },\r\n\r\n            },\r\n            plugins: {\r\n              tooltip: {\r\n                enabled: false\r\n              },\r\n              legend: {\r\n                labels: {\r\n                  color: 'white'\r\n                }\r\n              }\r\n            }\r\n          }}\r\n          className=\"piechart\"\r\n        />\r\n      </div>\r\n      {\r\n        isMobile ?\r\n          <h6>The 15% team supply is locked for a period of 3 months with monthly redemptions</h6>\r\n          :\r\n          null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Presale = () => {\r\n  const tokenInfo = [\r\n    { h: 'TOKEN PRE-SALE POOL (%)', d: '3BN (30%)' },\r\n    { h: 'INITIAL OFFERING MARKET CAP', d: 'BASED ON DEMAND' },\r\n    { h: 'MIN $CRO INVESTMENT', d: '200 $CRO' },\r\n    { h: 'MAX $CRO PER WALLET', d: 'USD 20K (IN $CRO EQUIVALENT)' },\r\n    { h: 'START DATE', d: 'Nov 20th, 3:00PM CET' },\r\n    { h: 'END DATE', d: 'Nov 22nd, 3:00PM CET' },\r\n    { h: 'CLAIM DATE', d: 'Nov 22nd, 4:00PM CET' },\r\n    { h: 'USE OF PROCEEDS', d: '60% LIQUIDITY POOL, 20% MARKETING, 20% TEAM' }\r\n  ]\r\n\r\n  return (\r\n    <table className=\"token-info-table\">\r\n      <tbody>\r\n        {\r\n          tokenInfo.map(info => (\r\n            <tr key={info.h}>\r\n              <th>{info.h}</th>\r\n              <td>{info.d}</td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nconst Earn = () => {\r\n  const tokenInfo = [\r\n    { h: 'HOW TO EARN $GOTCHA', d: \"STAKE ELIGIBLE NFTS (CHECK ELIGIBLE COLLECTIONS <a href='https://gotcha.com/earn' target='_self'>here</a>)\" },\r\n    { h: 'TOKEN STAKING POOL (%)', d: '$1BN (10%)' },\r\n    { h: 'DAILY DISTRIBUTION TO THE NFT POOL', d: '2,739,726 $ GOTCHA EACH DAY' },\r\n    { h: 'STAKING OPENING', d: 'ONE WEEK FROM THE PRE-SALE DATE' }\r\n  ];\r\n\r\n  return (\r\n    <table className=\"token-info-table\">\r\n      <tbody>\r\n        {\r\n          tokenInfo.map(info => (\r\n            <tr key={info.h}>\r\n              <th>{info.h}</th>\r\n              <td>\r\n                <div\r\n                  dangerouslySetInnerHTML={{ __html: info.d }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nconst TaxStructure = () => {\r\n  return (\r\n    <div className='tax-structure'>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th rowSpan={3}><span>3%</span><br />tax</th>\r\n            <td><div>* Liquidity Pool (LP) Contribution: <span>1%</span> per transaction\r\n              <Image src={Line1} /></div></td>\r\n          </tr>\r\n          <tr>\r\n            <td><div>* Deflationary Burn Contribution: <span>1%</span> per transaction is sent to an orphan wallet, decreasing the circulating supply on each tx\r\n              <Image src={Line2} /></div>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td><div>* Marketing Fee: <span>1%</span> per transaction is allocated to a host wallet for marketing purposes\r\n              <Image src={Line3} /></div>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td colSpan={2} className='note'>NOTE: tax fees are collected before purchases (front-run) to avoid negative market impact. Collected fees are automatically converted to $CRO for direct marketing expenditures.\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AntiWhales = () => {\r\n  return (\r\n    <>\r\n      <div className='anti-whales'>\r\n        <Image src={WhalesImg} alt=\"whale\" id=\"whale\" />\r\n        <div className=\"contents\">\r\n          <div className=\"paragraph\">\r\n            <p className=\"text\"><span>BUY Limits:</span> a single \"BUY\" transaction cannot exceed <span>5.0%</span> of the total supply</p>\r\n            <Image src={Line1} alt=\"line\" />\r\n          </div>\r\n          <div className=\"paragraph\">\r\n            <p className=\"text\"><span>SELL Limits:</span> a single \"SELL\" transaction cannot exceed <span>2.0%</span> of the total supply</p>\r\n            <Image src={Line2} alt=\"line\" />\r\n          </div>\r\n          <div className=\"paragraph\">\r\n            <p className=\"text\"><span>MAX wallet Size:</span> the holding amount of any wallet cannot exceed <span>7.5%</span> of the total supply</p>\r\n            <Image src={Line3} alt=\"line\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='anti-whales-note'>\r\n          Note: the above safeguard measures apply only on secondary trading (post presale). During presale, a cap per wallet of USD 20K (in $CRO equivalent) will apply\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function Waifunomics() {\r\n\r\n  const tabs = [\r\n    { text: 'token info', value: 'info' },\r\n    { text: 'supply allocation', value: 'supply' },\r\n    { text: 'presale', value: 'presale' },\r\n    { text: 'earn $gotcha', value: 'earn' },\r\n    { text: 'tax structure', value: 'tax' },\r\n    { text: 'anti-whales measures', value: 'antiwhales' }\r\n  ]\r\n\r\n  const [tabIndex, setTabIndex] = useState('info')\r\n  return (\r\n    <div className=\"waifunomics\">\r\n      <Container>\r\n        <Image src={WaifunomicsCoinImg} className='coin' />\r\n        <h2><span>GOTCHA</span>NOMICS</h2>\r\n        <div className=\"tabs-container\">\r\n          <div className=\"tabs\">\r\n            {\r\n              tabs.map(tab => (\r\n                <button\r\n                  className={tab.value === tabIndex ? 'active' : ''}\r\n                  onClick={() => setTabIndex(tab.value)}\r\n                  key={tab.value}\r\n                >\r\n                  {tab.text}\r\n                </button>\r\n              ))\r\n            }\r\n          </div>\r\n          <Image src={TeacherImg} className=\"teacher\" />\r\n        </div>\r\n        {\r\n          tabIndex === 'info' &&\r\n          <TokenInfoTable />\r\n        }\r\n        {\r\n          tabIndex === 'supply' &&\r\n          <SupplyDistributtion />\r\n        }\r\n        {\r\n          tabIndex === 'presale' &&\r\n          <Presale />\r\n        }\r\n        {\r\n          tabIndex === 'earn' &&\r\n          <Earn />\r\n        }\r\n        {\r\n          tabIndex === 'tax' &&\r\n          <TaxStructure />\r\n        }\r\n        {\r\n          tabIndex === 'antiwhales' &&\r\n          <AntiWhales />\r\n        }\r\n      </Container>\r\n      <Image src={CoinsBottomImg} className='coins-bottom' />\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useChainId, useReadContract } from \"wagmi\";\r\n\r\nimport Layout from \"layouts\";\r\nimport { Container, Image } from 'react-bootstrap'\r\nimport HeroImg from 'assets/images/Main.png'\r\nimport Timer from \"components/Timer\";\r\n// import Clock from 'components/Clock';\r\nimport LoneCoinImg from \"assets/images/lone-coin.png\"\r\nimport Section4Img from \"assets/images/section4.png\"\r\nimport WaifuTitle from \"assets/images/GOTCHAtitle.png\"\r\nimport LOHLogoImg from \"assets/images/LOHlogo.png\"\r\nimport GangverselogoImg from \"assets/images/Gangverselogo.png\"\r\nimport './Home.scss'\r\nimport Waifunomics from \"components/Waifunomics\";\r\nimport {\r\n  TEST_NET,\r\n  PRESALE_ADDRESS_TEST,\r\n  PRESALE_ADDRESS_MAIN,\r\n  GOTCHA_ADDRESS_TEST,\r\n  GOTCHA_ADDRESS_MAIN\r\n} from \"../config\";\r\nimport PresaleAbi from \"../config/abis/PRESALE_ABI.json\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCopyToClipboard } from \"react-use\";\r\n\r\nexport default function HomePage() {\r\n\r\n  const chainId = useChainId();\r\n  const [, copyToClipboard] = useCopyToClipboard();\r\n\r\n  const { data: timeToStart } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"timeToStart\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: timeToEnd } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"timeToEnd\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: timeToClaim } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"timeToClaim\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const [countdownTime, setCountdownTime] = useState(0);\r\n  const [presaleStatus, setPresaleStatus] = useState(\"\");\r\n  const navigate = useNavigate()\r\n  const [copyBtnText, setCopyBtnText] = useState(\"Copy Token Address\");\r\n\r\n  useEffect(() => {\r\n    let countTime = 0;\r\n\r\n    if (Date.now() / 1000 < timeToStart) {\r\n      countTime = timeToStart;\r\n      setPresaleStatus(\"Presale is not open. Come back in:\");\r\n    }\r\n    else if (Date.now() / 1000 >= timeToStart && Date.now() / 1000 < timeToEnd) {\r\n      countTime = timeToEnd;\r\n      setPresaleStatus(\"Presale is currently underway. It ends within:\");\r\n    }\r\n    else if (Date.now() / 1000 >= timeToEnd && Date.now() / 1000 < timeToClaim) {\r\n      countTime = timeToClaim;\r\n      setPresaleStatus(\"Claim is not open. Come back in:\");\r\n    }\r\n    else {\r\n      countTime = 0;\r\n      setPresaleStatus(\"Presale has concluded.\");\r\n    }\r\n\r\n    setCountdownTime(countTime);\r\n  }, [timeToStart, timeToEnd, timeToClaim])\r\n\r\n  const getCopyAddressText = () => {\r\n    return \"Copy Token Address\"\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container fluid>\r\n        <Image src={HeroImg} width='100%' />\r\n        <p className='presale-text'>{presaleStatus}</p>\r\n        <Timer timeToEnd={countdownTime} />\r\n        {/* <p className='presale-text'>The presale has not opened yet. Please return later.</p>\r\n        <Timer timeToEnd={0} /> */}\r\n        <div className=\"presale-container\">\r\n          <Image src={LoneCoinImg} />\r\n          <button className='presale-button text-center' onClick={() => navigate('/presale')}>Join the presale</button>\r\n        </div>\r\n      </Container>\r\n\r\n      <div className=\"ca-text\" id=\"ca\">\r\n        <div className=\"content\">\r\n          <p>Token Address</p>\r\n          <p>{chainId === TEST_NET ? GOTCHA_ADDRESS_TEST : GOTCHA_ADDRESS_MAIN}</p>\r\n          <button className='copy-button text-center' onClick={() => {\r\n            copyToClipboard(chainId === TEST_NET ? GOTCHA_ADDRESS_TEST : GOTCHA_ADDRESS_MAIN);\r\n            setCopyBtnText(\"COPIED\");\r\n            setTimeout(() => {\r\n              setCopyBtnText(\"Copy Token Address\")\r\n            }, 1000);\r\n          }}>\r\n            {copyBtnText}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"section4\" id=\"about\">\r\n        <h2>What is</h2>\r\n        <div className=\"content\">\r\n          <div className=\"title-container\">\r\n            <Image src={WaifuTitle} className=\"gotcha-title\" /><span>?</span>\r\n          </div>\r\n          <ul>\r\n            <li><p>#noGOTCHAnoLAIFU</p></li>\r\n            <li><p>$GOTCHA is the first anime meme coin to land on SONIC.</p></li>\r\n            <li><p>It is powered by a joint venture between OG anime projects in the SONIC space:</p></li>\r\n            <li><a href=\"\" target=\"_blank\">@GOTCHA</a></li>\r\n          </ul>\r\n          <div className=\"logos\">\r\n            <Image src={LOHLogoImg} className='loh' />\r\n          </div>\r\n        </div>\r\n        <Image src={Section4Img} width='100%' className=\"bg\" />\r\n      </div>\r\n      <Waifunomics />\r\n    </Layout>\r\n  )\r\n}\r\n"],"names":["Timer","_ref","timeToEnd","days","setDays","useState","hours","setHours","minutes","setMinutes","useEffect","timer","setInterval","getTimeUntil","time","parseInt","Date","now","Math","floor","clearInterval","_jsxs","className","children","_jsx","TokenInfoTable","h","d","map","info","SupplyDistributtion","isMobile","useMediaQuery","data","title","value","color","TeamComp","Image","src","Deco1Img","id","PresaleComp","LPComp","StakingComp","MarketingComp","_Fragment","Doughnut","datasets","backgroundColor","labels","options","elements","arc","borderColor","borderWidth","plugins","tooltip","enabled","legend","Presale","Earn","dangerouslySetInnerHTML","__html","TaxStructure","rowSpan","Line1","Line2","Line3","colSpan","AntiWhales","WhalesImg","alt","Waifunomics","tabIndex","setTabIndex","Container","WaifunomicsCoinImg","text","tab","onClick","TeacherImg","CoinsBottomImg","HomePage","chainId","useChainId","copyToClipboard","useCopyToClipboard","timeToStart","useReadContract","address","TEST_NET","PRESALE_ADDRESS_TEST","PRESALE_ADDRESS_MAIN","abi","PresaleAbi","functionName","args","timeToClaim","countdownTime","setCountdownTime","presaleStatus","setPresaleStatus","navigate","useNavigate","copyBtnText","setCopyBtnText","countTime","Layout","fluid","HeroImg","width","LoneCoinImg","GOTCHA_ADDRESS_TEST","GOTCHA_ADDRESS_MAIN","setTimeout","WaifuTitle","href","target","LOHLogoImg","Section4Img"],"sourceRoot":""}